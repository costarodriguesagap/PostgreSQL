SELECT FROM person; --> Count *
SELECT * FROM person WHERE gender='Female' and (country_of_birth = 'Portugal');
SELECT * FROM person WHERE gender='Female' and (country_of_birth = 'Poland' or country_of_birth = 'China');
SELECT * FROM person WHERE gender='Female' and country_of_birth IN ('Poland','Portugal');
SELECT DISTINCT country_of_birth FROM person ORDER BY country_of_birth ASC; 
SELECT * FROM person LIMIT 10;
SELECT * FROM person OFFSET 5 LIMIT 10;
SELECT * FROM person FETCH FIRST 10 ROWS ONLY;
SELECT * FROM person WHERE date_of_birth BETWEEN '2019-09-20' AND current_date;
SELECT * FROM person WHERE email LIKE '@gmail.com';
SELECT * FROM person WHERE country_of_birth ILIKE 'p%'; --> Nao é case Sensitive !!!!!!
SELECT country_of_birth,count(1) FROM person GROUP BY country_of_birth ORDER BY 2 DESC;
SELECT country_of_birth,count(1) FROM person GROUP BY country_of_birth HAVING count(1) = 2;
SELECT MAX(price) FROM car;
SELECT AVG(price) FROM car;
SELECT ROUND(AVG(price)) FROM car;
SELECT COALESCE(email,'************************') FROM person FETCH FIRST 30 ROWS ONLY;
SELECT NOW() :: DATE;
SELECT NOW() :: TIME;
SELECT (NOW() - INTERVAL '10 YEARS') :: DATE;
SELECT EXTRACT(YEAR FROM NOW());
SELECT EXTRACT(CENTURY FROM NOW());
SELECT first_name,last_name,gender,country_of_birth,date_of_birth, AGE(NOW(),date_of_birth) FROM person FETCH FIRST 30 ROWS ONLY;
ALTER TABLE person ADD CONSTRAINT unique_email UNIQUE (email);
ALTER TABLE person ADD CONSTRAINT gender_constraint CHECK (gender = 'Female' or gender = 'Male');

INSERT INTO person (id,first_name, last_name, email, gender, date_of_birth, country_of_birth) 
VALUES (1005,'Alf', 'Christofol', 'achristofol0@macromedia.com', 'Male', '2018/07/10', 'Estonia') ON CONFLICT (id) DO NOTHING; --> Não dá erro no insert quando a chave é duplicada, forma de implementar um LOAD RESUME;

INSERT INTO person (id,first_name, last_name, email, gender, date_of_birth, country_of_birth) 
VALUES (1005,'Alf', 'Christofol', 'achristofol0@macromedia.com', 'Male', '2018/07/10', 'Estonia') ON CONFLICT (id) DO UPDATE SET email = EXCLUDED.email; --> Se já existir, faz apenas o UPDATE do campo email;

UPDATE person SET car_id = 2 WHERE id = 1;

SELECT person.first_name , car.make , car.model , car.price FROM person JOIN car ON person.car_id = car.id;
SELECT * FROM person LEFT JOIN car ON person.car_id = car.id;
SELECT * FROM person a WHERE NOT EXISTS (SELECT 1 FROM car b WHERE a.car_id = b.id);